public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
public static void colorsPNG2Hex2Ascii(String pngFile) throws IOException {	// input : PNG file coded via colorsAscii2Hex2PNG // Bitmatrix(File pngFile) // each line is converted to hex // each hex is coverted to ascii File inputPNGFile = new File(INPUT_PATH + pngFile); File outputTxtFile = new File(OUTPUT_PATH + OUTPUT_TXT_FILENAME); //BRAVO ! N 43°40.335 E 007°12.233 Bitmatrix bm = new Bitmatrix(inputPNGFile); String[] hexStringList = new String[bm.getRows()]; 		for (int y = 0; y < bm.getRows(); y++) { String line = ""; for (int x = 0; x < bm.getCols(); x++) {	line = line + Tools.color2hex(bm.getColor(x,y));} hexStringList[y] = line;} BufferedWriter txtWriter = new BufferedWriter(new FileWriter(outputTxtFile)); for (int i = 0; i < hexStringList.length; i++) {xtWriter.write( Tools.hex2Ascii(hexStringList[i]) + "\n");} txtWriter.close();}
